openapi: 3.0.1
info:
  title: BIAN Model API
  description: An API for accessing various BIAN artefacts and posting back BIAN reference implementations.
  termsOfService: https://github.com/bian-official/public/blob/main/LICENSE
  contact:
    name: BIAN Model API Help
    url: https://portal.bian.org/dashboard/help/live-api
    email: api@bian.org
  license:
    name: Apache License 2.0
    url: https://github.com/bian-official/public/blob/main/LICENSE
  version: v2
paths:
  /Apis:
    post:
      tags:
        - Apis
      summary: 'Post multiple BIAN compatible Service Domain Apis to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: "Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n \r\nHow to call this endpoint:\r\n             \r\n You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n Please use the Bearer token for authorization.\r\n             \r\n Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Api'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Api'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Api'
      responses:
        '200':
          description: Success
    get:
      tags:
        - Apis
      summary: Returns a list of all BIAN Service Domain APIs.
      description: "For eg: \r\n  For each Api, the 'serviceDomainName' field gives the name of the Service Domian, and the 'oaS3_YAML' field will provide a BIAN Service Domain API in OAS3 YAML format."
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
  /Api:
    post:
      tags:
        - Apis
      summary: 'Post a BIAN compatible Service Domain Api to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: "Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n \r\nHow to call this endpoint:\r\n             \r\n You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n Please use the Bearer token for authorization.\r\n             \r\n Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api'
          text/json:
            schema:
              $ref: '#/components/schemas/Api'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api'
      responses:
        '200':
          description: Success
  /ApiUpdate:
    put:
      tags:
        - Apis
      summary: 'Post multiple BIAN compatible Service Domains to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\n\r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Api'
          text/json:
            schema:
              $ref: '#/components/schemas/Api'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Api'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /ApisUpdate:
    put:
      tags:
        - Apis
      summary: 'Put (Update) multiple BIAN compatible Service Domains to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only Put data that is in the public domain.'
      description: " Please DO NOT Put any confidential data. Any data put via this endpoint is accessible to everyone.\r\n   \r\n\r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Api'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Api'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Api'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  '/ApiByName/{name}/{organisation}/{version}':
    get:
      tags:
        - Apis
      summary: 'Returns a list of BIAN Service Domain APIs filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /APIsBasic endpoints to get a list of Name s for all APIs. Please provide the API name (same as the Service Domain Name without spaces in it. eg: 'AccountRecovery', 'InvestmentPortfolioManagement', 'CurrentAccount' and so on..)\r\n\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
  '/ApiByBianId/{bianId}/{organisation}/{version}':
    get:
      tags:
        - Apis
      summary: 'Returns a list of BIAN Service Domain APIs filtered by BianId, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /APIsBasic endpoints to get a list of BianId s for all APIs. \r\n\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
  '/ApiByName/{name}':
    get:
      tags:
        - Apis
      summary: Returns a list of BIAN Service Domain APIs filtered by Name
      description: "How to call this endpoint:\r\n\r\nPlease call Get /APIsBasic endpoints to get a list of Name s for all APIs. Please provide the API name (same as the Service Domain Name without spaces in it. eg: 'AccountRecovery', 'InvestmentPortfolioManagement', 'CurrentAccount' and so on..)"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
  '/ApiByBianId/{bianId}':
    get:
      tags:
        - Apis
      summary: 'Returns a list of BIAN Service Domain APIs filtered by BianId, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /APIsBasic endpoints to get a list of BianId s for all APIs."
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
  '/Apis/{organisation}/{version}':
    get:
      tags:
        - Apis
      summary: Returns a list of BIAN Service Domain APIs filtered by Organisation and Version.
      description: "How to call this endpoint:\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Api'
  /ApisBasic:
    get:
      tags:
        - Apis
      summary: Returns a list of BIAN Service Domain APIs with some basic attributes including Name and BianId
      description: "How to call this endpoint:\r\n\r\nThis endpoint provides a reduced set of attributes for all the service domain APIs.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Service Domain API"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiBasic'
  '/ApisBasic/{organisation}/{version}':
    get:
      tags:
        - Apis
      summary: 'Returns a list of BIAN Service Domain APIs with some basic attributes including Name and BianId, filtered by Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nThis endpoint provides a reduced set of attributes for all the service domain APIs.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Service Domain API\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiBasic'
  /BOClasses:
    post:
      tags:
        - BOClasses
      summary: 'Post multiple BIAN compatible Business Object (BO) Classes to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BOClass'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BOClass'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BOClass'
      responses:
        '200':
          description: Success
  /BOClass:
    post:
      tags:
        - BOClasses
      summary: 'Post a BIAN compatible Business Object (BO) Classes to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: "Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n \r\nHow to call this endpoint:\r\n             \r\n You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n Please use the Bearer token for authorization.\r\n             \r\n Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BOClass'
          text/json:
            schema:
              $ref: '#/components/schemas/BOClass'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BOClass'
      responses:
        '200':
          description: Success
  '/BOClasses/{page}/{recordsPerPage}':
    get:
      tags:
        - BOClasses
      summary: Returns a list of BIAN Business Object (BO) Classes filtered by Page Number and Records per page.
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, recordsPerPage = 10, would return records 1 to 10; page = 2, recordsPerPage = 100, would return records 201 to 300\r\n\r\nThe following are allowed values for recordsPerPage : 10,100,300; please avoid using 300 in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\nFor higher values please use tools such as Postman or in your software."
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: recordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordsPerPage'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
  '/BOClassByName/{name}/{organisation}/{version}':
    get:
      tags:
        - BOClasses
      summary: 'Returns a list of BIAN Business Object (BO) Classes filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BOClassesBasic endpoints to get a list of Name s for all BO Classes. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
  '/BOClassByBianId/{bianId}/{organisation}/{version}':
    get:
      tags:
        - BOClasses
      summary: 'Returns a list of BIAN Business Object (BO) Classes filtered by BianId, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BOClassesBasic endpoints to get a list of BianId s for all BO Classes. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
  '/BOClassByName/{name}':
    get:
      tags:
        - BOClasses
      summary: Returns a list of BIAN Business Object (BO) Classes filtered by Name.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BOClassesBasic endpoints to get a list of Name s for all BO Classes."
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
  '/BOClassByBianId/{bianId}':
    get:
      tags:
        - BOClasses
      summary: Returns a list of BIAN Business Object (BO) Classes filtered by BianId.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BOClassesBasic endpoints to get a list of BianId s for all BO Classes."
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
  '/BOClasses/{page}/{recordsPerPage}/{organisation}/{version}':
    get:
      tags:
        - BOClasses
      summary: 'Returns a list of BIAN Business Object (BO) Classes filtered by Page Number, Records per page, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, recordsPerPage = 10, would return records 1 to 10; page = 2, recordsPerPage = 100, would return records 201 to 300 \r\n\r\nThe following are allowed values for recordsPerPage : 10,100,300; please avoid using 300 in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\nFor higher values please use tools such as Postman or in your software. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: recordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordsPerPage'
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClass'
  '/BOClass/{uid}':
    get:
      tags:
        - BOClasses
      summary: Returns a list of BIAN BO Class filtered by UID.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceDomainsBasic endpoints to get a list of BianId s for all Service Domains"
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
            default: BIAN-10.0.0-808f0597-3bf1-eb11-8336-06948965ca21-1
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BOClass'
            application/json:
              schema:
                $ref: '#/components/schemas/BOClass'
            text/json:
              schema:
                $ref: '#/components/schemas/BOClass'
  /BOClassesBasic:
    get:
      tags:
        - BOClasses
      summary: Returns a list of BIAN Business Object (BO) Classes with some basic attributes including Name and BianId.
      description: "How to call this endpoint:\r\n\r\nThis endpoint provides a reduced set of attributes for all the Business Object (BO) Classes.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Object (BO) Class"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClassBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClassBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClassBasic'
  '/BOClassesBasic/{organisation}/{version}':
    get:
      tags:
        - BOClasses
      summary: 'Returns a list of BIAN Business Object (BO) Classes with some basic attributes including Name and BianId, filtered by Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nThis endpoint provides a reduced set of attributes for all the Business Object (BO) Classes.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Object (BO) Class\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClassBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClassBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOClassBasic'
  '/BOClassesBasicByNameLike/{nameLike}/{organisation}/{version}':
    get:
      tags:
        - BOClasses
      summary: 'Returns a list of BIAN Business Object Classes with some basic attributes including Name and BianId, filtered by any Name that matches nameLike, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Classes.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Class\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: nameLike
          in: path
          required: true
          schema:
            type: string
            default: Account
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
  /BODataTypes:
    post:
      tags:
        - BODataTypes
      summary: 'Post multiple BIAN compatible Business Object (BO) DataTypes to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BODataType'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BODataType'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BODataType'
      responses:
        '200':
          description: Success
    get:
      tags:
        - BODataTypes
      summary: Returns a list of BIAN Business Object (BO) DataTypes.
      description: "How to call this endpoint:\r\n\r\nThis endpoint returns all BO DataTypes.\r\nThe BianId, Name and Description are some of the key attributes."
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
  /BODataType:
    post:
      tags:
        - BODataTypes
      summary: 'Post a BIAN compatible Business Object (BO) DataType to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BODataType'
          text/json:
            schema:
              $ref: '#/components/schemas/BODataType'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BODataType'
      responses:
        '200':
          description: Success
  '/BODataTypeByName/{name}/{organisation}/{version}':
    get:
      tags:
        - BODataTypes
      summary: 'Returns a list of BIAN Business Object (BO) DataTypes filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BODataTypesBasic endpoints to get a list of Name s for all Business Object (BO) DataTypes. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
  '/BODataTypeByBianId/{bianId}/{organisation}/{version}':
    get:
      tags:
        - BODataTypes
      summary: 'Returns a list of BIAN Business Object (BO) DataTypes filtered by BianId, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BODataTypesBasic endpoints to get a list of BianId s for all Business Object (BO) DataTypes. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
  '/BODataTypeByName/{name}':
    get:
      tags:
        - BODataTypes
      summary: Returns a list of BIAN Business Object (BO) DataTypes filtered by Name.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BODataTypesBasic endpoints to get a list of Name s for all Business Object (BO) DataTypes."
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
  '/BODataTypeByBianId/{bianId}':
    get:
      tags:
        - BODataTypes
      summary: Returns a list of BIAN Business Object (BO) DataTypes filtered by BianId.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BODataTypesBasic endpoints to get a list of BianId s for all Business Object (BO) DataTypes."
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
  '/BODataTypes/{organisation}/{version}':
    get:
      tags:
        - BODataTypes
      summary: Returns a list of BIAN Business Object (BO) DataTypes filtered Organisation and Version.
      description: "How to call this endpoint:\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataType'
  '/BODataType/{uid}':
    get:
      tags:
        - BODataTypes
      summary: Returns a list of BIAN BO DataType filtered by UID.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceDomainsBasic endpoints to get a list of BianId s for all Service Domains"
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
            default: BIAN-10.0.0-b41f5ecc-fbed-eb11-8336-0692f5211cfd-3600
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BODataType'
            application/json:
              schema:
                $ref: '#/components/schemas/BODataType'
            text/json:
              schema:
                $ref: '#/components/schemas/BODataType'
  /BODataTypesBasic:
    get:
      tags:
        - BODataTypes
      summary: Returns a list of BIAN Business Object (BO) DataTypes with some basic attributes including Name and BianId.
      description: "How to call this endpoint:\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Object (BO) DataType."
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataTypeBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataTypeBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataTypeBasic'
  '/BODataTypesBasic/{organisation}/{version}':
    get:
      tags:
        - BODataTypes
      summary: 'Returns a list of BIAN Business Object (BO) DataTypes with some basic attributes including Name and BianId, filtered by Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Business Object (BO) DataTypes.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Object (BO) DataType\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataTypeBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataTypeBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BODataTypeBasic'
  /BOEnumerations:
    post:
      tags:
        - BOEnumerations
      summary: 'Post multiple BIAN compatible Business Object (BO) Enumerations to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BOEnumeration'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BOEnumeration'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BOEnumeration'
      responses:
        '200':
          description: Success
  /BOEnumeration:
    post:
      tags:
        - BOEnumerations
      summary: 'Post a BIAN compatible Business Object (BO) Enumerations to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: "Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n \r\nHow to call this endpoint:\r\n             \r\n You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n Please use the Bearer token for authorization.\r\n             \r\n Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BOEnumeration'
          text/json:
            schema:
              $ref: '#/components/schemas/BOEnumeration'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BOEnumeration'
      responses:
        '200':
          description: Success
  '/BOEnumerations/{page}/{recordsPerPage}':
    get:
      tags:
        - BOEnumerations
      summary: Returns a list of BIAN Business Object (BO) Enumerations filtered by Page Number and Records per page.  Please only post data that is in the public domain.
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n  \r\nHow to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, recordsPerPage = 10, would return records 1 to 10; page = 2, recordsPerPage = 100, would return records 201 to 300\r\n\r\nThe following are allowed values for recordsPerPage : 10,100,300; please avoid using 300 in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\nFor higher values please use tools such as Postman or in your software."
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: recordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordsPerPage'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
  '/BOEnumerationByName/{name}/{organisation}/{version}':
    get:
      tags:
        - BOEnumerations
      summary: 'Returns a list of BIAN Business Object (BO) Enumerations filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BOEnumerationsBasic endpoints to get a list of Name s for all BO Enumerations. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
  '/BOEnumerationByBianId/{bianId}/{organisation}/{version}':
    get:
      tags:
        - BOEnumerations
      summary: 'Returns a list of BIAN Business Object (BO) Enumerations filtered by BianId, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BOEnumerationsBasic endpoints to get a list of BianId s for all BO Enumerations. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
  '/BOEnumerationByName/{name}':
    get:
      tags:
        - BOEnumerations
      summary: Returns a list of BIAN Business Object (BO) Enumerations filtered by Name.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BOEnumerationsBasic endpoints to get a list of Name s for all BO Enumerations."
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
  '/BOEnumerationByBianId/{bianId}':
    get:
      tags:
        - BOEnumerations
      summary: Returns a list of BIAN Business Object (BO) Enumerations filtered by BianId.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BOEnumerationsBasic endpoints to get a list of BianId s for all BO Enumerations."
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
  '/BOEnumerations/{organisation}/{version}':
    get:
      tags:
        - BOEnumerations
      summary: Returns a list of BIAN Business Object (BO) Enumerations filtered Organisation and Version.
      description: "How to call this endpoint:\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
  '/BOEnumerations/{page}/{recordsPerPage}/{organisation}/{version}':
    get:
      tags:
        - BOEnumerations
      summary: 'Returns a list of BIAN Business Object (BO) Enumerations filtered by Page Number, Records per page, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, recordsPerPage = 10, would return records 1 to 10; page = 2, recordsPerPage = 100, would return records 201 to 300 \r\n\r\nThe following are allowed values for recordsPerPage : 10,100,300; please avoid using 300 in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\nFor higher values please use tools such as Postman or in your software. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: recordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordsPerPage'
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumeration'
  '/BOEnumeration/{uid}':
    get:
      tags:
        - BOEnumerations
      summary: Returns a list of BIAN BO DataType filtered by UID.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceDomainsBasic endpoints to get a list of BianId s for all Service Domains"
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
            default: BIAN-10.0.0-cbaeb0ad-71fb-eb11-833a-069538764ea9-3615
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BOEnumeration'
            application/json:
              schema:
                $ref: '#/components/schemas/BOEnumeration'
            text/json:
              schema:
                $ref: '#/components/schemas/BOEnumeration'
  /BOEnumerationsBasic:
    get:
      tags:
        - BOEnumerations
      summary: Returns a list of BIAN Business Object (BO) Enumerations with some basic attributes including Name and BianId.
      description: "How to call this endpoint:\r\n\r\nThis endpoint provides a reduced set of attributes for all the Business Object (BO) Enumerations.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Object (BO) Enumeration"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumerationBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumerationBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumerationBasic'
  '/BOEnumerationsBasic/{organisation}/{version}':
    get:
      tags:
        - BOEnumerations
      summary: 'Returns a list of all BIAN Business Object (BO) Enumerations , filtered Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nThis endpoint provides a reduced set of attributes for all the service domain Business Object (BO) Enumerations .\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Object (BO) Enumeration\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumerationBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumerationBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOEnumerationBasic'
  /BOPrimitiveTypes:
    post:
      tags:
        - BOPrimitiveTypes
      summary: 'Post multiple BIAN compatible Business Object (BO) PrimitiveTypes to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: "Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n\r\nHow to call this endpoint:\r\n             \r\n You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n Please use the Bearer token for authorization.\r\n             \r\n Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BOPrimitiveType'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BOPrimitiveType'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BOPrimitiveType'
      responses:
        '200':
          description: Success
    get:
      tags:
        - BOPrimitiveTypes
      summary: Returns a list of BIAN Business Object (BO) PrimitiveTypes.
      description: "How to call this endpoint:\r\n\r\nThis endpoint returns all BO PrimitiveTypes.\r\nThe BianId, Name and Description are some of the key attributes."
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
  /BOPrimitiveType:
    post:
      tags:
        - BOPrimitiveTypes
      summary: 'Post a BIAN compatible Business Object (BO) PrimitiveType to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: "Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n\r\nHow to call this endpoint:\r\n             \r\n You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n Please use the Bearer token for authorization.\r\n             \r\n Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BOPrimitiveType'
          text/json:
            schema:
              $ref: '#/components/schemas/BOPrimitiveType'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BOPrimitiveType'
      responses:
        '200':
          description: Success
  '/BOPrimitiveTypeByName/{name}/{organisation}/{version}':
    get:
      tags:
        - BOPrimitiveTypes
      summary: 'Returns a list of BIAN Business Object (BO) PrimitiveTypes filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BOPrimitiveTypesBasic endpoints to get a list of Name s for all Business Object (BO) PrimitiveTypes. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
  '/BOPrimitiveTypeByBianId/{bianId}/{organisation}/{version}':
    get:
      tags:
        - BOPrimitiveTypes
      summary: 'Returns a list of BIAN Business Object (BO) PrimitiveTypes filtered by BianId, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BOPrimitiveTypesBasic endpoints to get a list of BianId s for all Business Object (BO) PrimitiveTypes. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
  '/BOPrimitiveTypeByName/{name}':
    get:
      tags:
        - BOPrimitiveTypes
      summary: Returns a list of BIAN Business Object (BO) PrimitiveTypes filtered by Name.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BOPrimitiveTypesBasic endpoints to get a list of Name s for all Business Object (BO) PrimitiveTypes."
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
  '/BOPrimitiveTypeByBianId/{bianId}':
    get:
      tags:
        - BOPrimitiveTypes
      summary: Returns a list of BIAN Business Object (BO) PrimitiveTypes filtered by BianId.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BOPrimitiveTypesBasic endpoints to get a list of BianId s for all Business Object (BO) PrimitiveTypes."
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
  '/BOPrimitiveTypes/{organisation}/{version}':
    get:
      tags:
        - BOPrimitiveTypes
      summary: Returns a list of BIAN Business Object (BO) PrimitiveTypes filtered Organisation and Version.
      description: "How to call this endpoint:\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveType'
  '/BOPrimitiveType/{uid}':
    get:
      tags:
        - BOPrimitiveTypes
      summary: Returns a list of BIAN BO DataType filtered by UID.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceDomainsBasic endpoints to get a list of BianId s for all Service Domains"
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
            default: BIAN-10.0.0-cbf187c3-0dee-eb11-8336-0692f5211cfd-3589
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BOPrimitiveType'
            application/json:
              schema:
                $ref: '#/components/schemas/BOPrimitiveType'
            text/json:
              schema:
                $ref: '#/components/schemas/BOPrimitiveType'
  /BOPrimitiveTypesBasic:
    get:
      tags:
        - BOPrimitiveTypes
      summary: Returns a list of BIAN Business Object (BO) PrimitiveTypes with some basic attributes including Name and BianId.
      description: "How to call this endpoint:\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Object (BO) PrimitiveType."
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveTypeBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveTypeBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveTypeBasic'
  '/BOPrimitiveTypesBasic/{organisation}/{version}':
    get:
      tags:
        - BOPrimitiveTypes
      summary: 'Returns a list of BIAN Business Object (BO) PrimitiveTypes with some basic attributes including Name and BianId, filtered by Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Business Object (BO) PrimitiveTypes.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Object (BO) PrimitiveType\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveTypeBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveTypeBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BOPrimitiveTypeBasic'
  /BusinessAreas:
    post:
      tags:
        - BusinessAreas
      summary: 'Post multiple BIAN compatible Business Areas to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: "Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n\r\n How to call this endpoint:\r\n             \r\n You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n Please use the Bearer token for authorization.\r\n             \r\n Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessArea'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessArea'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessArea'
      responses:
        '200':
          description: Success
    get:
      tags:
        - BusinessAreas
      summary: Returns a list of BIAN Business Areas.
      description: "How to call this endpoint:\r\n\r\nThis endpoint returns all BusinessAreas.\r\nThe BianId, Name and Description are some of the key attributes."
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessArea'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessArea'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessArea'
  /BusinessArea:
    post:
      tags:
        - BusinessAreas
      summary: 'Post a BIAN compatible Business Area to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: "Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n  \r\nHow to call this endpoint:\r\n             \r\n You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n Please use the Bearer token for authorization.\r\n             \r\n Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessArea'
          text/json:
            schema:
              $ref: '#/components/schemas/BusinessArea'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BusinessArea'
      responses:
        '200':
          description: Success
  '/BusinessAreaByName/{name}/{organisation}/{version}':
    get:
      tags:
        - BusinessAreas
      summary: 'Returns a list of BIAN Business Areas filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessAreas endpoints to get a list of Name s for all Business Areas. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BusinessArea'
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessArea'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessArea'
  '/BusinessAreaByBianId/{bianId}/{organisation}/{version}':
    get:
      tags:
        - BusinessAreas
      summary: 'Returns a list of BIAN Business Areas filtered by BianId, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessAreas endpoints to get a list of BianId s for all Business Areas. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BusinessArea'
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessArea'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessArea'
  '/BusinessAreaByName/{name}':
    get:
      tags:
        - BusinessAreas
      summary: Returns a list of BIAN Business Areas filtered by Name.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessAreas endpoints to get a list of Name s for all Business Areas."
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BusinessArea'
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessArea'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessArea'
  '/BusinessAreaByBianId/{bianId}':
    get:
      tags:
        - BusinessAreas
      summary: Returns a list of BIAN Business Areas filtered by BianId.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessAreas endpoints to get a list of BianId s for all Business Areas."
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BusinessArea'
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessArea'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessArea'
  '/BusinessAreas/{organisation}/{version}':
    get:
      tags:
        - BusinessAreas
      summary: Returns a list of BIAN Business Areas filtered Organisation and Version.
      description: "How to call this endpoint:\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessArea'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessArea'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessArea'
  /BusinessCapabilities:
    post:
      tags:
        - BusinessCapabilities
      summary: 'Post multiple BIAN compatible Business Domains to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: "Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n \r\nHow to call this endpoint:\r\n             \r\n You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n Please use the Bearer token for authorization.\r\n             \r\n Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessCapability'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessCapability'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessCapability'
      responses:
        '200':
          description: Success
    get:
      tags:
        - BusinessCapabilities
      summary: Returns a list of BIAN Business Domains.
      description: "How to call this endpoint:\r\n\r\nThis endpoint returns all BusinessCapabilities.\r\nThe BianId, Name and Description are some of the key attributes."
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
  /BusinessCapability:
    post:
      tags:
        - BusinessCapabilities
      summary: 'Post a BIAN compatible Business Domain to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n\r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessCapability'
          text/json:
            schema:
              $ref: '#/components/schemas/BusinessCapability'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BusinessCapability'
      responses:
        '200':
          description: Success
  '/BusinessCapabilityByName/{name}/{organisation}/{version}':
    get:
      tags:
        - BusinessCapabilities
      summary: 'Returns a list of BIAN Business Domains filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessCapabilitiesBasic endpoints to get a list of Name s for all Business Domains. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 11.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
  '/BusinessCapabilityByBianId/{bianId}/{organisation}/{version}':
    get:
      tags:
        - BusinessCapabilities
      summary: 'Returns a list of BIAN Business Domains filtered by BianId, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessCapabilitiesBasic endpoints to get a list of BianId s for all Business Domains. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 11.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
  '/BusinessCapabilityByName/{name}':
    get:
      tags:
        - BusinessCapabilities
      summary: Returns a list of BIAN Business Domains filtered by Name.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessCapabilitiesBasic endpoints to get a list of Name s for all Business Domains."
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
  '/BusinessCapabilityByBianId/{bianId}':
    get:
      tags:
        - BusinessCapabilities
      summary: Returns a list of BIAN Business Domains filtered by BianId.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessCapabilitiesBasic endpoints to get a list of BianId s for all Business Domains."
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
  '/BusinessCapabilities/{organisation}/{version}':
    get:
      tags:
        - BusinessCapabilities
      summary: Returns a list of BIAN Business Domains filtered Organisation and Version.
      description: "How to call this endpoint:\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 11.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapability'
  /BusinessCapabilitiesBasic:
    get:
      tags:
        - BusinessCapabilities
      summary: Returns a list of BIAN Business Domains with some basic attributes including Name and BianId.
      description: "How to call this endpoint:\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Domain."
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapabilityBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapabilityBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapabilityBasic'
  '/BusinessCapabilitiesBasic/{organisation}/{version}':
    get:
      tags:
        - BusinessCapabilities
      summary: 'Returns a list of BIAN Business Domains with some basic attributes including Name and BianId, filtered by Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Business Domains.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Domain\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 11.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapabilityBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapabilityBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessCapabilityBasic'
  /BusinessDomains:
    post:
      tags:
        - BusinessDomains
      summary: 'Post multiple BIAN compatible Business Domains to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: "Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n \r\nHow to call this endpoint:\r\n             \r\n You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n Please use the Bearer token for authorization.\r\n             \r\n Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessDomain'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessDomain'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessDomain'
      responses:
        '200':
          description: Success
    get:
      tags:
        - BusinessDomains
      summary: Returns a list of BIAN Business Domains.
      description: "How to call this endpoint:\r\n\r\nThis endpoint returns all BusinessDomains.\r\nThe BianId, Name and Description are some of the key attributes."
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
  /BusinessDomain:
    post:
      tags:
        - BusinessDomains
      summary: 'Post a BIAN compatible Business Domain to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n\r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessDomain'
          text/json:
            schema:
              $ref: '#/components/schemas/BusinessDomain'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BusinessDomain'
      responses:
        '200':
          description: Success
  '/BusinessDomainByName/{name}/{organisation}/{version}':
    get:
      tags:
        - BusinessDomains
      summary: 'Returns a list of BIAN Business Domains filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessDomainsBasic endpoints to get a list of Name s for all Business Domains. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
  '/BusinessDomainByBianId/{bianId}/{organisation}/{version}':
    get:
      tags:
        - BusinessDomains
      summary: 'Returns a list of BIAN Business Domains filtered by BianId, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessDomainsBasic endpoints to get a list of BianId s for all Business Domains. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
  '/BusinessDomainByName/{name}':
    get:
      tags:
        - BusinessDomains
      summary: Returns a list of BIAN Business Domains filtered by Name.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessDomainsBasic endpoints to get a list of Name s for all Business Domains."
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
  '/BusinessDomainByBianId/{bianId}':
    get:
      tags:
        - BusinessDomains
      summary: Returns a list of BIAN Business Domains filtered by BianId.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessDomainsBasic endpoints to get a list of BianId s for all Business Domains."
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
  '/BusinessDomains/{organisation}/{version}':
    get:
      tags:
        - BusinessDomains
      summary: Returns a list of BIAN Business Domains filtered Organisation and Version.
      description: "How to call this endpoint:\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomain'
  /BusinessDomainsBasic:
    get:
      tags:
        - BusinessDomains
      summary: Returns a list of BIAN Business Domains with some basic attributes including Name and BianId.
      description: "How to call this endpoint:\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Domain."
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomainBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomainBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomainBasic'
  '/BusinessDomainsBasic/{organisation}/{version}':
    get:
      tags:
        - BusinessDomains
      summary: 'Returns a list of BIAN Business Domains with some basic attributes including Name and BianId, filtered by Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Business Domains.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Domain\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomainBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomainBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessDomainBasic'
  /BusinessObjects:
    post:
      tags:
        - BusinessObjects
      summary: 'Post multiple BIAN compatible Business Objects to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: "Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n\r\nHow to call this endpoint:\r\n             \r\n You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n Please use the Bearer token for authorization.\r\n             \r\n Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessObject'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessObject'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessObject'
      responses:
        '200':
          description: Success
  /BusinessObject:
    post:
      tags:
        - BusinessObjects
      summary: 'Post a BIAN compatible Business Objects to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: "Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n\r\nHow to call this endpoint:\r\n             \r\n You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n Please use the Bearer token for authorization.\r\n             \r\n Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessObject'
          text/json:
            schema:
              $ref: '#/components/schemas/BusinessObject'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BusinessObject'
      responses:
        '200':
          description: Success
  '/BusinessObjects/{page}/{recordsPerPage}':
    get:
      tags:
        - BusinessObjects
      summary: Returns a list of BIAN Business Objects filtered by Page Number and Records per page.
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, recordsPerPage = 10, would return records 1 to 10; page = 2, recordsPerPage = 100, would return records 201 to 300\r\n\r\nThe following are allowed values for recordsPerPage : 10,100,300; please avoid using 300 in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\nFor higher values please use tools such as Postman or in your software."
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: recordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordsPerPage'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
  '/BusinessObjectByName/{name}/{organisation}/{version}':
    get:
      tags:
        - BusinessObjects
      summary: 'Returns a list of BIAN Business Objects filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessObjectsBasic endpoints to get a list of Name s for all Business Objects. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
  '/BusinessObjectByBianId/{bianId}/{organisation}/{version}':
    get:
      tags:
        - BusinessObjects
      summary: 'Returns a list of BIAN Business Objects filtered by BianId, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessObjectsBasic endpoints to get a list of BianId s for all Business Objects. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
  '/BusinessObjectByName/{name}':
    get:
      tags:
        - BusinessObjects
      summary: Returns a list of BIAN Business Objects filtered by Name.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessObjectsBasic endpoints to get a list of Name s for all Business Objects."
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
  '/BusinessObjectByBianId/{bianId}':
    get:
      tags:
        - BusinessObjects
      summary: Returns a list of BIAN Business Objects filtered by BianId.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessObjectsBasic endpoints to get a list of BianId s for all Business Objects."
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
  '/BusinessObjects/{page}/{recordsPerPage}/{organisation}/{version}':
    get:
      tags:
        - BusinessObjects
      summary: 'Returns a list of BIAN Business Objects filtered by Page Number, Records per page, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, recordsPerPage = 10, would return records 1 to 10, page = 2; recordsPerPage = 100, would return records 201 to 300 \r\n\r\nThe following are allowed values for recordsPerPage : 10,100,300; please avoid using 300 in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\nFor higher values please use tools such as Postman or in your software. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: recordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordsPerPage'
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObject'
  '/BusinessObject/{uid}':
    get:
      tags:
        - BusinessObjects
      summary: Returns a list of BIAN BO DataType filtered by UID.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceDomainsBasic endpoints to get a list of BianId s for all Service Domains"
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
            default: BIAN-10.0.0-808f0597-3bf1-eb11-8336-06948965ca21-1
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BusinessObject'
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessObject'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessObject'
  /BusinessObjectsBasic:
    get:
      tags:
        - BusinessObjects
      summary: Returns a list of BIAN Business Objects with some basic attributes including Name and BianId.
      description: "How to call this endpoint:\r\n\r\nThe Version and Organisation of each Business Object record can be determined from the UID of each record. The UID is formed of 'Organisation-version-BianId-ID', for eg: 'BIAN-10.0.0-808f0597-3bf1-eb11-8336-06948965ca21-1'\r\n\r\nFor this endpoint we do not provide the Meta object explicitly as it increases the data returned significantly.\r\n\r\nWe also recommend not calling this endpoint in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\n\r\nFor calling this, we recommend using tools such as Postman or in your software. \r\n\r\nRequest Url: https://host:port/BusinessObjectsBasic; curl eg: curl -X 'GET' 'https://host:port/BusinessObjectsBasic' -H 'accept: text/plain'\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Objects"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObjectBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObjectBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObjectBasic'
  '/BusinessObjectsBasic/{organisation}/{version}':
    get:
      tags:
        - BusinessObjects
      summary: 'Returns a list of BIAN Business Objects with some basic attributes including Name and BianId, filtered by Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\n\r\nThis endpoint provides a reduced set of attributes for all the Business Objects.\r\n\r\n\r\nThe Version and Organisation of each Business Object record can be determined from the UID of each record. The UID is formed of 'Organisation-version-BianId-ID', for eg: 'BIAN-10.0.0-808f0597-3bf1-eb11-8336-06948965ca21-1'\r\n\r\nFor this endpoint we do not provide the Meta object explicitly as it increases the data returned significantly.\r\n\r\nWe also recommend not calling this endpoint in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\n\r\nFor calling this, we recommend using tools such as Postman or in your software. \r\n\r\nRequest Url: https://host:port/BusinessObjectsBasic/Organisation/version; curl eg: curl -X 'GET' 'https://host:port/BusinessObjectsBasic/BIAN/10.0.0' -H 'accept: text/plain'\r\n\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Objects\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObjectBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObjectBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObjectBasic'
  '/ BusinessObjectsBasicByNameLike/{nameLike}/{organisation}/{version}':
    get:
      tags:
        - BusinessObjects
      summary: 'Returns a list of BIAN Business Objects with some basic attributes including Name and BianId, filtered by any Name that matches nameLike, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Business Objects.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Object.\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: nameLike
          in: path
          required: true
          schema:
            type: string
            default: Account
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObjectBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObjectBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessObjectBasic'
  /BusinessScenarios:
    post:
      tags:
        - BusinessScenarios
      summary: 'Post multiple BIAN compatible Business Scenarios to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessScenario'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessScenario'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessScenario'
      responses:
        '200':
          description: Success
  /BusinessScenarios/Update:
    put:
      tags:
        - BusinessScenarios
      summary: 'Update multiple BIAN compatible Business Scenarios to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT put any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessScenario'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessScenario'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/BusinessScenario'
      responses:
        '200':
          description: Success
  /BusinessScenario:
    post:
      tags:
        - BusinessScenarios
      summary: 'Post a BIAN compatible Business Scenarios to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessScenario'
          text/json:
            schema:
              $ref: '#/components/schemas/BusinessScenario'
          application/*+json:
            schema:
              $ref: '#/components/schemas/BusinessScenario'
      responses:
        '200':
          description: Success
  '/BusinessScenarios/{page}/{businessScenarioRecordsPerPage}':
    get:
      tags:
        - BusinessScenarios
      summary: Returns a list of BIAN Business Scenarios filtered by Page Number and Records per page. .  Please only post data that is in the public domain.
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n  \r\nHow to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, businessScenarioRecordsPerPage = 10, would return records 1 to 10, page = 2; businessScenarioRecordsPerPage = 20, would return records 51 to 60 \r\n\r\nThe following are allowed values for businessScenarioRecordsPerPage : 10,20,30; please avoid using 20 and 30 in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\nFor higher values please use tools such as Postman or in your software."
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: businessScenarioRecordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/BusinessScenarioRecordsPerPage'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
  '/BusinessScenarioByName/{name}/{organisation}/{version}':
    get:
      tags:
        - BusinessScenarios
      summary: 'Returns a list of BIAN Business Scenarios filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessScenariosBasic endpoints to get a list of Name s for all Business Scenarios. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
  '/BusinessScenarioByName/{name}':
    get:
      tags:
        - BusinessScenarios
      summary: Returns a list of BIAN Business Scenarios filtered by Name.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessScenariosBasic endpoints to get a list of Name s for all Business Scenarios"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BusinessScenario'
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessScenario'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessScenario'
  '/BusinessScenarios/{page}/{businessScenarioRecordsPerPage}/{organisation}/{version}':
    get:
      tags:
        - BusinessScenarios
      summary: 'Returns a list of BIAN Business Scenarios filtered by Page Number, Records per page, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, businessScenarioRecordsPerPage = 10, would return records 1 to 10, page = 2; businessScenarioRecordsPerPage = 20, would return records 51 to 60 \r\n\r\nThe following are allowed values for businessScenarioRecordsPerPage : 10,20,30; please avoid using 20 and 30 in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\nFor higher values please use tools such as Postman or in your software. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: businessScenarioRecordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/BusinessScenarioRecordsPerPage'
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
  '/BusinessScenarioByUID/{uid}':
    get:
      tags:
        - BusinessScenarios
      summary: Returns a list of BIAN Business Scenarios filtered by UID.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessScenariosBasic endpoints to get a list of Name s for all Business Scenarios"
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
            default: BIAN-10.0.0-DetermineDynamicallyCalculatedAvailableBalance
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BusinessScenario'
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessScenario'
            text/json:
              schema:
                $ref: '#/components/schemas/BusinessScenario'
  /BusinessScenariosBasic:
    get:
      tags:
        - BusinessScenarios
      summary: Returns a list of BIAN Business Scenarios with some basic attributes including Name and BianId.
      description: "How to call this endpoint:\r\n            \r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Business Scenarios\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Scenario"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
  '/BusinessScenariosBasic/{organisation}/{version}':
    get:
      tags:
        - BusinessScenarios
      summary: 'Returns a list of BIAN Business Scenarios with some basic attributes including Name and BianId, filtered by Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Business Scenarios\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Business Scenario\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenario'
  '/BusinessScenariosBasic/{serviceDomainName}':
    get:
      tags:
        - BusinessScenarios
      summary: Returns a list of BIAN Business Scenarios filtered by Name.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /BusinessScenariosBasic endpoints to get a list of Name s for all Business Scenarios"
      parameters:
        - name: serviceDomainName
          in: path
          required: true
          schema:
            type: string
            default: Savings Account
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenarioBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenarioBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenarioBasic'
  '/BusinessScenariosBasicByStatusLikeAndUser/{statusLike}/{userUID}':
    get:
      tags:
        - BusinessScenarios
      summary: 'Returns a list of BIAN Business Scenarios with some basic attributes including Name and BianId, filtered by any Status that matches statusLike, and User that matches userUID'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Service Domains.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Service Domain"
      parameters:
        - name: statusLike
          in: path
          required: true
          schema:
            type: string
            default: Feedback
        - name: userUID
          in: path
          required: true
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenarioBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenarioBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenarioBasic'
  '/BusinessScenariosBasicByUser/{userUID}':
    get:
      tags:
        - BusinessScenarios
      summary: 'Returns a list of BIAN Business Scenarios with some basic attributes including Name and BianId, filtered by an User that matches userUID'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Service Domains.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Service Domain"
      parameters:
        - name: userUID
          in: path
          required: true
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenarioBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenarioBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenarioBasic'
  '/BusinessScenariosBasic/{userUID}/{organisation}/{version}':
    get:
      tags:
        - BusinessScenarios
      summary: 'Returns a list of BIAN Business Scenarios with some basic attributes including Name and BianId, filtered by an User that matches userUID, Organisation and Version'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Service Domains.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Service Domain"
      parameters:
        - name: userUID
          in: path
          required: true
          schema:
            type: string
            default: 7d649972-4b50-441a-8ca1-9578b4c8a5f7
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenarioBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenarioBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BusinessScenarioBasic'
  /HtmlPages:
    post:
      tags:
        - HtmlPages
      summary: 'Post multiple BIAN compatible (Service Domain Information) Html Page to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/HtmlPage'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/HtmlPage'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/HtmlPage'
      responses:
        '200':
          description: Success
    get:
      tags:
        - HtmlPages
      summary: Returns a list of all BIAN (Service Domain Information) Html Pages.
      description: "For eg: \r\n  For each HtmlPage, the 'serviceDomainName' field gives the name of the Service Domian, and the 'htmlContent' field will provide a BIAN Service Domain Information content in Html format.\r\n\r\n  The BIAN Service Domian Information includes\r\n  1. A link to the BIAN API Console\r\n  2. Executive Summary\r\n  3. Examples of Use\r\n  4. Related Business Scenarios\r\n  5. Core Business Object\r\n  6. Key Features"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
  /HtmlPage:
    post:
      tags:
        - HtmlPages
      summary: 'Post multiple BIAN compatible (Service Domain Information) Html Page to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n\r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HtmlPage'
          text/json:
            schema:
              $ref: '#/components/schemas/HtmlPage'
          application/*+json:
            schema:
              $ref: '#/components/schemas/HtmlPage'
      responses:
        '200':
          description: Success
  '/HtmlPageByName/{name}/{organisation}/{version}':
    get:
      tags:
        - HtmlPages
      summary: 'Returns a list of all BIAN (Service Domain Information) Html Pages, filtered by Name, Organisation and Version.'
      description: "  The BIAN Service Domian Information includes\r\n  1. A link to the BIAN API Console\r\n  2. Executive Summary\r\n  3. Examples of Use\r\n  4. Related Business Scenarios\r\n  5. Core Business Object\r\n  6. Key Features\r\n\r\nHow to call this endpoint:\r\n\r\nPlease call Get /HtmlPagesBasic endpoints to get a list of Name s for all Html Pages. Please provide the Html Page name (same as the Service Domain Name with spaces in it. eg: 'Account Recovery', 'Investment Portfolio Management', 'Current Account' and so on..)\r\n\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
  '/HtmlPageByBianId/{bianId}/{organisation}/{version}':
    get:
      tags:
        - HtmlPages
      summary: 'Returns a list of all BIAN (Service Domain Information) Html Pages, filtered by BianId, Organisation and Version.'
      description: "  The BIAN Service Domian Information includes\r\n  1. A link to the BIAN API Console\r\n  2. Executive Summary\r\n  3. Examples of Use\r\n  4. Related Business Scenarios\r\n  5. Core Business Object\r\n  6. Key Features\r\n\r\nHow to call this endpoint:\r\n\r\nPlease call Get /HtmlPagesBasic endpoints to get a list of BianId s for all Html Pages. \r\n\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
  '/HtmlPageByName/{name}':
    get:
      tags:
        - HtmlPages
      summary: 'Returns a list of all BIAN (Service Domain Information) Html Pages, filtered by Name.'
      description: "  The BIAN Service Domian Information includes\r\n  1. A link to the BIAN API Console\r\n  2. Executive Summary\r\n  3. Examples of Use\r\n  4. Related Business Scenarios\r\n  5. Core Business Object\r\n  6. Key Features\r\n\r\nHow to call this endpoint:\r\n\r\nPlease call Get /HtmlPagesBasic endpoints to get a list of Name s for all Html Pages. Please provide the Html Page name (same as the Service Domain Name with spaces in it. eg: 'Account Recovery', 'Investment Portfolio Management', 'Current Account' and so on..)"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
  '/HtmlPageByBianId/{bianId}':
    get:
      tags:
        - HtmlPages
      summary: 'Returns a list of all BIAN (Service Domain Information) Html Pages, filtered by BianId.'
      description: "  The BIAN Service Domian Information includes\r\n  1. A link to the BIAN API Console\r\n  2. Executive Summary\r\n  3. Examples of Use\r\n  4. Related Business Scenarios\r\n  5. Core Business Object\r\n  6. Key Features\r\n\r\nHow to call this endpoint:\r\n\r\nPlease call Get /HtmlPagesBasic endpoints to get a list of BianId s for all Html Pages."
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
  '/HtmlPages/{organisation}/{version}':
    get:
      tags:
        - HtmlPages
      summary: 'Returns a list of all BIAN (Service Domain Information) Html Pages, filtered Organisation and Version.'
      description: "  The BIAN Service Domian Information includes\r\n  1. A link to the BIAN API Console\r\n  2. Executive Summary\r\n  3. Examples of Use\r\n  4. Related Business Scenarios\r\n  5. Core Business Object\r\n  6. Key Features\r\n\r\nHow to call this endpoint:\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPage'
  /HtmlPagesBasic:
    get:
      tags:
        - HtmlPages
      summary: Returns a list of BIAN Service Domain (Service Domain Information) Html Pages with some basic attributes including Name and BianId
      description: "How to call this endpoint:\r\n\r\nThis endpoint provides a reduced set of attributes for all the service domain (Service Domain Information) Html Pages.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific (Service Domain Information) Html Page"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPageBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPageBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPageBasic'
  '/HtmlPagesBasic/{organisation}/{version}':
    get:
      tags:
        - HtmlPages
      summary: 'Returns a list of all BIAN (Service Domain Information) Html Pages, filtered Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nThis endpoint provides a reduced set of attributes for all the service domain (Service Domain Information) Html Pages.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific (Service Domain Information) Html Page\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPageBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPageBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HtmlPageBasic'
  /Metas:
    post:
      tags:
        - Metas
      summary: 'Post multiple BIAN compatible Meta Data information (specifically when posting for a combination of a new Organisation and Version) to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Meta'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Meta'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Meta'
      responses:
        '200':
          description: Success
    get:
      tags:
        - Metas
      summary: Returns a list of BIAN Meta Data information. This can be used to determine the Organisations and Versions of data available through these API endpoints.
      description: "How to call this endpoint:\r\n\r\nThis endpoint returns all Meta Data.\r\nThe Organisation and Version are the key attributes"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meta'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meta'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meta'
  /Meta:
    post:
      tags:
        - Metas
      summary: 'Post a BIAN compatible Meta Data information (specifically when posting for a combination of a new Organisation and Version) to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meta'
          text/json:
            schema:
              $ref: '#/components/schemas/Meta'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Meta'
      responses:
        '200':
          description: Success
  '/MetaByName/{name}/{organisation}/{version}':
    get:
      tags:
        - Metas
      summary: 'Returns a list of BIAN Meta Data information, filtered by Name, Organisation and Version. This can be used to determine the Organisations and Versions of data available through these API endpoints.'
      description: "How to call this endpoint:\r\n\r\nThis endpoint returns Meta Data.\r\nThe Organisation and Version are the key attributes\r\n\r\nTo get a list of all organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Meta'
            application/json:
              schema:
                $ref: '#/components/schemas/Meta'
            text/json:
              schema:
                $ref: '#/components/schemas/Meta'
  '/MetaByName/{name}':
    get:
      tags:
        - Metas
      summary: 'Returns a list of BIAN Meta Data information, filtered by Name. This can be used to determine the Organisations and Versions of data available through these API endpoints.'
      description: "How to call this endpoint:\r\n\r\nThis endpoint returns Meta Data.\r\nThe Organisation and Version are the key attributes"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Meta'
            application/json:
              schema:
                $ref: '#/components/schemas/Meta'
            text/json:
              schema:
                $ref: '#/components/schemas/Meta'
  '/Metas/{organisation}/{version}':
    get:
      tags:
        - Metas
      summary: 'Returns a list of BIAN Meta Data information, filtered by Organisation and Version. This can be used to determine the Organisations and Versions of data available through these API endpoints.'
      description: "How to call this endpoint:\r\n\r\nThis endpoint returns Meta Data.\r\nThe Organisation and Version are the key attributes\r\n\r\nTo get a list of all organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meta'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meta'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meta'
  /ScenarioGroups:
    post:
      tags:
        - ScenarioGroups
      summary: 'Post multiple BIAN compatible Scenario Groups to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n  \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ScenarioGroup'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ScenarioGroup'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ScenarioGroup'
      responses:
        '200':
          description: Success
  /ScenarioGroup:
    post:
      tags:
        - ScenarioGroups
      summary: 'Post a BIAN compatible Scenario Groups to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n  \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScenarioGroup'
          text/json:
            schema:
              $ref: '#/components/schemas/ScenarioGroup'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ScenarioGroup'
      responses:
        '200':
          description: Success
  '/ScenarioGroups/{page}/{businessScenarioGroupRecordsPerPage}':
    get:
      tags:
        - ScenarioGroups
      summary: Returns a list of BIAN Scenario Groups filtered by Page Number and Records per page.
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, businessScenarioGroupRecordsPerPage = 10, would return records 1 to 10, page = 2; businessScenarioGroupRecordsPerPage = 20, would return records 51 to 60 \r\n\r\nThe following are allowed values for businessScenarioGroupRecordsPerPage : 10,20,30; please avoid using 20 and 30 in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\nFor higher values please use tools such as Postman or in your software."
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: businessScenarioGroupRecordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/BusinessScenarioRecordsPerPage'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroup'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroup'
  '/ScenarioGroupByName/{name}/{organisation}/{version}':
    get:
      tags:
        - ScenarioGroups
      summary: 'Returns a list of BIAN Scenario Groups filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ScenarioGroupsBasic endpoints to get a list of Name s for all Scenario Groups. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroup'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroup'
  '/ScenarioGroupByName/{name}':
    get:
      tags:
        - ScenarioGroups
      summary: Returns a list of BIAN Scenario Groups filtered by Name.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ScenarioGroupsBasic endpoints to get a list of Name s for all Scenario Groups"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroup'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroup'
  '/ScenarioGroups/{page}/{scenarioGroupRecordsPerPage}/{organisation}/{version}':
    get:
      tags:
        - ScenarioGroups
      summary: 'Returns a list of BIAN Scenario Groups filtered by Page Number, Records per page, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, scenarioGroupRecordsPerPage = 10, would return records 1 to 10, page = 2; scenarioGroupRecordsPerPage = 20, would return records 51 to 60 \r\n\r\nThe following are allowed values for scenarioGroupRecordsPerPage : 10,20,30; please avoid using 20 and 30 in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\nFor higher values please use tools such as Postman or in your software. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: scenarioGroupRecordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/BusinessScenarioRecordsPerPage'
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroup'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroup'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroup'
  /ScenarioGroupsBasic:
    get:
      tags:
        - ScenarioGroups
      summary: Returns a list of BIAN Scenario Groups with some basic attributes including Name and BianId.
      description: "How to call this endpoint:\r\n            \r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Scenario Groups\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Scenario Group"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroupBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroupBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroupBasic'
  '/ScenarioGroupsBasic/{organisation}/{version}':
    get:
      tags:
        - ScenarioGroups
      summary: 'Returns a list of BIAN Scenario Groups with some basic attributes including Name and BianId, filtered by Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Scenario Groups\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Scenario Group\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroupBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroupBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ScenarioGroupBasic'
  /Search:
    post:
      tags:
        - Search
      summary: 'Returns a list of BIAN artefacts, that match the search term'
      description: "How to call this endpoint:\r\n\r\nProvide a search text"
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResult'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
  /Search/BusinessAreas:
    get:
      tags:
        - Search
      summary: 'Returns a list of BIAN BusinessAreas, that match the search term'
      description: "How to call this endpoint:\r\n\r\nProvide a search text"
      parameters:
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResult'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
  /Search/BusinessDomains:
    get:
      tags:
        - Search
      summary: 'Returns a list of BIAN BusinessDomains, that match the search term'
      description: "How to call this endpoint:\r\n\r\nProvide a search text"
      parameters:
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResult'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
  /Search/BusinessScenarios:
    get:
      tags:
        - Search
      summary: 'Returns a list of BIAN BusinessScenarios, that match the search term'
      description: "How to call this endpoint:\r\n\r\nProvide a search text"
      parameters:
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResult'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
  /Search/ServiceDomains:
    get:
      tags:
        - Search
      summary: 'Returns a list of BIAN ServiceDomains, that match the search term'
      description: "How to call this endpoint:\r\n\r\nProvide a search text"
      parameters:
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResult'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
  /Search/BOClasses:
    get:
      tags:
        - Search
      summary: 'Returns a list of BIAN BOClasses, that match the search term'
      description: "How to call this endpoint:\r\n\r\nProvide a search text"
      parameters:
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResult'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
  /Search/BOEnumerations:
    get:
      tags:
        - Search
      summary: 'Returns a list of BIAN BOEnumerations, that match the search term'
      description: "How to call this endpoint:\r\n\r\nProvide a search text"
      parameters:
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResult'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
  /Search/BODataTypes:
    get:
      tags:
        - Search
      summary: 'Returns a list of BIAN BODataTypes, that match the search term'
      description: "How to call this endpoint:\r\n\r\nProvide a search text"
      parameters:
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResult'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
  /Search/BOPrimitiveTypes:
    get:
      tags:
        - Search
      summary: 'Returns a list of BIAN BOPrimitiveTypes, that match the search term'
      description: "How to call this endpoint:\r\n\r\nProvide a search text"
      parameters:
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResult'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
  /Search/Apis:
    post:
      tags:
        - Search
      summary: 'Returns a list of BIAN Apis, that match the search term'
      description: "How to call this endpoint:\r\n\r\nProvide a search text"
      requestBody:
        content:
          application/json:
            schema:
              type: string
          text/json:
            schema:
              type: string
          application/*+json:
            schema:
              type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SearchResult'
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
            text/json:
              schema:
                $ref: '#/components/schemas/SearchResult'
  /ServiceDomains:
    post:
      tags:
        - ServiceDomains
      summary: 'Post multiple BIAN compatible Service Domains to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\n\r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ServiceDomain'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ServiceDomain'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ServiceDomain'
      responses:
        '200':
          description: Success
  /ServiceDomain:
    post:
      tags:
        - ServiceDomains
      summary: 'Post a BIAN compatible Service Domain to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDomain'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceDomain'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceDomain'
      responses:
        '200':
          description: Success
  /ServiceDomain/ServiceOperation/Attributes/Update:
    put:
      tags:
        - ServiceDomains
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDomain'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceDomain'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceDomain'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /ServiceDomainUpdate:
    put:
      tags:
        - ServiceDomains
      summary: 'Post multiple BIAN compatible Service Domains to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\n\r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceDomain'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceDomain'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceDomain'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  /ServiceDomainsUpdate:
    put:
      tags:
        - ServiceDomains
      summary: 'Put (Update) multiple BIAN compatible Service Domains to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only Put data that is in the public domain.'
      description: " Please DO NOT Put any confidential data. Any data put via this endpoint is accessible to everyone.\r\n   \r\n\r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ServiceDomain'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ServiceDomain'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ServiceDomain'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  '/ServiceDomain/{serviceDomainUID}/Status/{status}':
    patch:
      tags:
        - ServiceDomains
      summary: Update the Status of a Service Domain.  Please only post data that is in the public domain.
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\n\r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please provide the servicDomainUID of the Srevice Domain to update, along with status to assign"
      parameters:
        - name: serviceDomainUID
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  '/ServiceDomain/{serviceDomainUID}/UserAssignment/{userUID}':
    patch:
      tags:
        - ServiceDomains
      summary: Assign user to a praticular feedback Service Domain.  Please only post data that is in the public domain.
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\n\r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please provide the servicDomainUID of the Srevice Domain to update, along with the users UID (the user who is to be assigned)"
      parameters:
        - name: serviceDomainUID
          in: path
          required: true
          schema:
            type: string
        - name: userUID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  '/ServiceDomain/{serviceDomainUID}/UserAssignmentRemove/{userUID}':
    patch:
      tags:
        - ServiceDomains
      summary: Remove user assigned to a praticular feedback Service Domain.  Please only post data that is in the public domain.
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\n\r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please provide the servicDomainUID of the Srevice Domain to update, along with the users UID (the user who is to be assigned)"
      parameters:
        - name: serviceDomainUID
          in: path
          required: true
          schema:
            type: string
        - name: userUID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  '/ServiceDomain/{serviceDomainUID}/Status/{status}/UserAssignment/{userUID}':
    patch:
      tags:
        - ServiceDomains
      summary: Assign user to a praticular feedback Service Domain.  Please only post data that is in the public domain.
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\n\r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please provide the servicDomainUID of the Srevice Domain to update, along with the users UID (the user who is to be assigned)"
      parameters:
        - name: serviceDomainUID
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
        - name: userUID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  '/ServiceDomain/{serviceDomainUID}/Status/{status}/UserAssignmentRemove/{userUID}':
    patch:
      tags:
        - ServiceDomains
      summary: Remove user assigned to a praticular feedback Service Domain.  Please only post data that is in the public domain.
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\n\r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please provide the servicDomainUID of the Srevice Domain to update, along with the users UID (the user who is to be assigned)"
      parameters:
        - name: serviceDomainUID
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
        - name: userUID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
  '/ServiceDomainByName/{name}/{organisation}/{version}':
    get:
      tags:
        - ServiceDomains
      summary: 'Returns a list of BIAN Service Domains filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceDomainsBasic endpoints to get a list of Name s for all Service Domains. Please provide Service Domain name with spaces in it. eg: 'Account Recovery', 'Investment Portfolio Management', 'Current Account' and so on..\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
  '/ServiceDomainsByName/{name}/{organisation}/{version}':
    get:
      tags:
        - ServiceDomains
      summary: 'Returns a list of BIAN Service Domains filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceDomainsBasic endpoints to get a list of Name s for all Service Domains. Please provide Service Domain name with spaces in it. eg: 'Account Recovery', 'Investment Portfolio Management', 'Current Account' and so on..\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
  '/ServiceDomainByBianId/{bianId}/{organisation}/{version}':
    get:
      tags:
        - ServiceDomains
      summary: 'Returns a list of BIAN Service Domains filtered by BianId, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceDomainsBasic endpoints to get a list of BianId s for all Service Domains. Please call Get /ServiceDomainsBasic endpoints to get a list of BianId s for all Service Domains\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
  '/ServiceDomainsByName/{name}':
    get:
      tags:
        - ServiceDomains
      summary: Returns a list of BIAN Service Domains filtered by Name.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceDomainsBasic endpoints to get a list of Name s for all Service Domains. Please provide Service Domain name with spaces in it. eg: 'Account Recovery', 'Investment Portfolio Management', 'Current Account' and so on.."
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
  '/ServiceDomainsByBianId/{bianId}':
    get:
      tags:
        - ServiceDomains
      summary: Returns a list of BIAN Service Domains filtered by BianId.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceDomainsBasic endpoints to get a list of BianId s for all Service Domains"
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
  '/ServiceDomainByUID/{uid}':
    get:
      tags:
        - ServiceDomains
      summary: Returns a list of BIAN Service Domains filtered by BianId.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceDomainsBasic endpoints to get a list of BianId s for all Service Domains"
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
            default: BIAN-10.0.0-AccountRecovery
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
  '/ServiceDomainsByExtendedDefinition/{extendedDefinition}/{page}/{serviceDomainRecordsPerPage}':
    get:
      tags:
        - ServiceDomains
      summary: 'Returns a list of BIAN Service Domains filtered by ExtendedDefinition, Page Number and Service Domain Records per page.'
      description: "How to call this endpoint:\r\n\r\nSet extendedDefinition = true, to get a list of Service Domains for which the Control Record, Behavious Qualifiers and Service Operations have been defined.\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, serviceDomainRecordsPerPage = 10, would return records 1 to 10, page = 2, serviceDomainRecordsPerPage = 30, would return records 61 to 90 \r\n\r\nThe following are allowed values for serviceDomainRecordsPerPage : 10,20,30; please avoid using anything other than 10 in this API console as it might cause your browser window to freeze due to the large quantity of data. \r\nFor higher values please use tools such as Postman or in your software."
      parameters:
        - name: extendedDefinition
          in: path
          required: true
          schema:
            type: boolean
            default: true
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: serviceDomainRecordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ServiceDomainRecordsPerPage'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
  '/ServiceDomains/{page}/{serviceDomainRecordsPerPage}':
    get:
      tags:
        - ServiceDomains
      summary: Returns a list of BIAN Service Domains filtered by Page Number and Service Domain Records per page.
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, serviceDomainRecordsPerPage = 10, would return records 1 to 10, page = 2, serviceDomainRecordsPerPage = 30, would return records 61 to 90 \r\n\r\nThe following are allowed values for serviceDomainRecordsPerPage : 10,20,30; please avoid using anything other than 10 in this API console as it might cause your browser window to freeze due to the large quantity of data. \r\nFor higher values please use tools such as Postman or in your software."
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: serviceDomainRecordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ServiceDomainRecordsPerPage'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
  '/ServiceDomains/{page}/{serviceDomainRecordsPerPage}/{organisation}/{version}':
    get:
      tags:
        - ServiceDomains
      summary: 'Returns a list of BIAN Service Domains filtered by ExtendedDefinition, Page Number, Service Domain Records per page, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nSet extendedDefinition = true, to get a list of Service Domains for which the Control Record, Behavious Qualifiers and Service Operations have been defined.\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, serviceDomainRecordsPerPage = 10, would return records 1 to 10, page = 2, serviceDomainRecordsPerPage = 30, would return records 61 to 90 \r\n\r\nThe following are allowed values for serviceDomainRecordsPerPage : 10,20,30; please avoid using anything other than 10 in this API console as it might cause your browser window to freeze due to the large quantity of data. \r\nFor higher values please use tools such as Postman or in your software.\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: serviceDomainRecordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ServiceDomainRecordsPerPage'
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomain'
  /ServiceDomainsBasic:
    get:
      tags:
        - ServiceDomains
      summary: Returns a list of BIAN Service Domains with some basic attributes including Name and BianId.
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Service domains.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Service Domain"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
  '/ServiceDomainsBasic/{status}':
    get:
      tags:
        - ServiceDomains
      summary: Returns a list of BIAN Service Domains with some basic attributes including Name and BianId.
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Service domains.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Service Domain"
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
            default: Registered
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
  '/ServiceDomainsBasic/{organisation}/{version}':
    get:
      tags:
        - ServiceDomains
      summary: 'Returns a list of BIAN Service Domains with some basic attributes including Name and BianId, filtered by Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Service Domains.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Service Domain\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
  '/ServiceDomainsBasic/{status}/{organisation}/{version}':
    get:
      tags:
        - ServiceDomains
      summary: 'Returns a list of BIAN Service Domains with some basic attributes including Name and BianId, filtered by Status, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Service Domains.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Service Domain\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: status
          in: path
          required: true
          schema:
            type: string
            default: Registered
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
  '/ServiceDomainsBasicByStatusLike/{statusLike}/{organisation}/{version}':
    get:
      tags:
        - ServiceDomains
      summary: 'Returns a list of BIAN Service Domains with some basic attributes including Name and BianId, filtered by any Status that matches statusLike, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Service Domains.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Service Domain\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: statusLike
          in: path
          required: true
          schema:
            type: string
            default: Feedback
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
  '/ServiceDomainsBasicByStatusUser/{statusLike}/{userUID}':
    get:
      tags:
        - ServiceDomains
      summary: 'Returns a list of BIAN Service Domains with some basic attributes including Name and BianId, filtered by any Status that matches statusLike, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint provides a reduced set of attributes for all the Service Domains.\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Service Domain\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: statusLike
          in: path
          required: true
          schema:
            type: string
            default: Feedback
        - name: userUID
          in: path
          required: true
          schema:
            type: string
            default: ''
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
  '/ServiceDomain/{organisation}':
    get:
      tags:
        - ServiceDomains
      summary: Returns a list of BIAN Service Domains filtered by Organisation.
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
  '/ServiceDomain/{organisation}/{status}':
    get:
      tags:
        - ServiceDomains
      summary: Returns a list of BIAN Service Domains filtered by Organisation and Status.
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
        - name: status
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
            text/json:
              schema:
                $ref: '#/components/schemas/ServiceDomain'
  '/ServiceDomainBasics/{serviceDomainUIDs}':
    get:
      tags:
        - ServiceDomains
      summary: Returns a list of BIAN Service Domain Basics filtered by serviceDomainUIDs (comma separated).
      parameters:
        - name: serviceDomainUIDs
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
  '/ServiceDomains/{serviceDomainUIDs}/Copy':
    post:
      tags:
        - ServiceDomains
      summary: Returns a list of BIAN Service Domains filtered by serviceDomainUIDs (comma separated).
      parameters:
        - name: serviceDomainUIDs
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meta'
          text/json:
            schema:
              $ref: '#/components/schemas/Meta'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Meta'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceDomainBasic'
  /ServiceOperations:
    post:
      tags:
        - ServiceOperations
      summary: 'Post multiple BIAN compatible Service Operations to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n   \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ServiceOperation'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ServiceOperation'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ServiceOperation'
      responses:
        '200':
          description: Success
  /ServiceOperation:
    post:
      tags:
        - ServiceOperations
      summary: 'Post a BIAN compatible Service Operation to provide a reference BIAN implementation, and/or to provide feedback to BIAN.  Please only post data that is in the public domain.'
      description: " Please DO NOT post any confidential data. Any data posted via this endpoint is accessible to everyone.\r\n  \r\nHow to call this endpoint:\r\n\r\n  You will need to call the /Token endpoint first with your username and password to get a bearer token. \r\n  Please use the Bearer token for authorization.\r\n\r\n  Please populate the Meta Object, specifically Organisation and your Version. The Organisation in the Meta object needs to match the Organisation we have stored, associated with your username."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceOperation'
          text/json:
            schema:
              $ref: '#/components/schemas/ServiceOperation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ServiceOperation'
      responses:
        '200':
          description: Success
  '/ServiceOperations/{page}/{recordsPerPage}':
    get:
      tags:
        - ServiceOperations
      summary: Returns a list of BIAN Service Operations filtered by Page Number and Records per page.
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, recordsPerPage = 10, would return records 1 to 10; page = 2, recordsPerPage = 100, would return records 201 to 300\r\n\r\nThe following are allowed values for recordsPerPage : 10,100,300; please avoid using 100 and 300 in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\nFor higher values please use tools such as Postman or in your software."
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: recordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordsPerPage'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
  '/ServiceOperationByName/{name}/{organisation}/{version}':
    get:
      tags:
        - ServiceOperations
      summary: 'Returns a list of BIAN Service Operations filtered by Name, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceOperationsBasic endpoints to get a list of Name s for all Service Operations. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
  '/ServiceOperationByBianId/{bianId}/{organisation}/{version}':
    get:
      tags:
        - ServiceOperations
      summary: 'Returns a list of BIAN Service Operations filtered by BianId, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceOperationsBasic endpoints to get a list of BianId s for all Service Operations. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
  '/ServiceOperationByName/{name}':
    get:
      tags:
        - ServiceOperations
      summary: Returns a list of BIAN Service Operations filtered by Name.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceOperationsBasic endpoints to get a list of Name s for all Service Operations."
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
  '/ServiceOperationByBianId/{bianId}':
    get:
      tags:
        - ServiceOperations
      summary: Returns a list of BIAN Service Operations filtered by BianId.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceOperationsBasic endpoints to get a list of BianId s for all Service Operations."
      parameters:
        - name: bianId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
  '/ServiceOperationByUID/{uid}':
    get:
      tags:
        - ServiceOperations
      summary: Returns a list of BIAN Service Operations filtered by UID.
      description: "How to call this endpoint:\r\n\r\nPlease call Get /ServiceOperationsBasic endpoints to get a list of UID s for all Service Operations."
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
            default: BIAN-10.0.0-89fa1dbd-d13d-ea11-8284-061fbc9d6e00
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
  '/ServiceOperations/{page}/{recordsPerPage}/{organisation}/{version}':
    get:
      tags:
        - ServiceOperations
      summary: 'Returns a list of BIAN Service Operations filtered by Page Number, Records per page, Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\nDue to the large amounts of data involved, this endpoint can only be called in pages (with a number of service domain records associated with each page)\r\n\r\neg: page = 0, recordsPerPage = 10, would return records 1 to 10, page = 2; recordsPerPage = 100, would return records 201 to 300 \r\n\r\nThe following are allowed values for recordsPerPage : 10,100,300; please avoid using 100 and 300 in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\nFor higher values please use tools such as Postman or in your software. \r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
            default: 0
        - name: recordsPerPage
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/RecordsPerPage'
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperation'
  /ServiceOperationsBasic:
    get:
      tags:
        - ServiceOperations
      summary: Returns a list of BIAN Service Operations (across all Srevice Domains) with some basic attributes including Name and BianId
      description: "How to call this endpoint:\r\n\r\n\r\nThis endpoint provides a reduced set of attributes for all the Service Operations.\r\n\r\n\r\nThe Version and Organisation of each Service Operation record can be determined from the UID of each record. The UID is formed of 'Organisation-version-BianId', for eg: 'BIAN-10.0.0-0eb1a7b6-fc2f-ec11-835e-0659ee972955'\r\n\r\nFor this endpoint we do not provide the Meta object explicitly as it increases the data returned significantly.\r\n\r\nWe also recommend not calling this endpoint in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\n\r\nFor calling this, we recommend using tools such as Postman or in your software. \r\n\r\nRequest Url: https://host:port/ServiceOperationsBasic; curl eg: curl -X 'GET' 'https://host:port/ServiceOperationsBasic' -H 'accept: text/plain'\r\n\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Service Operations"
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperationBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperationBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperationBasic'
  '/ServiceOperationsBasic/{organisation}/{version}':
    get:
      tags:
        - ServiceOperations
      summary: 'Returns a list of BIAN Service Operations (across all Srevice Domains) with some basic attributes including Name and BianId, filtered by Organisation and Version.'
      description: "How to call this endpoint:\r\n\r\n\r\nThis endpoint provides a reduced set of attributes for all the Service Operations.\r\n\r\n\r\nThe Version and Organisation of each Service Operation record can be determined from the UID of each record. The UID is formed of 'Organisation-version-BianId', for eg: 'BIAN-10.0.0-0eb1a7b6-fc2f-ec11-835e-0659ee972955'\r\n\r\nFor this endpoint we do not provide the Meta object explicitly as it increases the data returned significantly.\r\n\r\nWe also recommend not calling this endpoint in this API console as it might cause your browser window to freeze due to the large quantity of data.\r\n\r\nFor calling this, we recommend using tools such as Postman or in your software. \r\n\r\nRequest Url: https://host:port/ServiceOperationsBasic/Organisation/version; curl eg: curl -X 'GET' 'https://host:port/ServiceOperationsBasic/BIAN/10.0.0' -H 'accept: text/plain'\r\n\r\n\r\nAttrbutes such as 'Name' and 'BianId' can be used to call the other endpoints to get details for a specific Service Operations\r\n\r\nTo get a list of organisation and versions available, please call the Get /Metas endpoint"
      parameters:
        - name: organisation
          in: path
          required: true
          schema:
            type: string
            default: BIAN
        - name: version
          in: path
          required: true
          schema:
            type: string
            default: 10.0.0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperationBasic'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperationBasic'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceOperationBasic'
  /Token/authenticate:
    post:
      tags:
        - Token
      summary: Returns a Bearer token for authorization in POST endpoints. Any data posted via this API is in the public domain. The Get endpoints do not need authorization
      description: "Please DO NOT post any confidential data using any of the POST endpoints in this API. Any data posted via this endpoint is accessible to everyone.\r\n            \r\nHow to call this endpoint:\r\n\r\n  Please call this endpoint with your 'username' and 'password' to receive the 'token'. \r\n    \r\n  For the live environment, to obtain your username and password, please email <a href=\"mailto:api@bian.org?subject=BIAN Model Access API - Live. &body=Please can I get access to the Live Model Access APIs?  My details are as follows: Full Name : , Organisation: , Email: .\">BIAN API Support</a> (api@bian.org)\r\n   \r\n  Call the Post endpoints using 'Bearer token' in the Authorization headers.\r\n  \r\n  The Get endpoinst do not need Authorization."
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AuthenticateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AuthenticateRequest'
      responses:
        '200':
          description: Success
  /Token/refresh-token:
    post:
      tags:
        - Token
      responses:
        '200':
          description: Success
  /Token/revoke-token:
    post:
      tags:
        - Token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RevokeTokenRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/RevokeTokenRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/RevokeTokenRequest'
      responses:
        '200':
          description: Success
  '/Token/{uid}/refresh-tokens':
    get:
      tags:
        - Token
      parameters:
        - name: uid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
components:
  schemas:
    Api:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        serviceDomainName:
          type: string
          nullable: true
        oaS3_YAML:
          type: string
          nullable: true
        oaS3_JSON:
          type: string
          nullable: true
        apiEndpoints:
          type: array
          items:
            $ref: '#/components/schemas/ApiEndpoint'
          nullable: true
      additionalProperties: false
    ApiBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
      additionalProperties: false
    ApiEndpoint:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        metaLight:
          $ref: '#/components/schemas/MetaLight'
        status:
          type: string
          nullable: true
        serviceDomainName:
          type: string
          nullable: true
        serviceDomainBianID:
          type: string
          nullable: true
        serviceOperationName:
          type: string
          nullable: true
        serviceOperationBianID:
          type: string
          nullable: true
        requestBodySchemaName:
          type: string
          nullable: true
        requestBodySchema:
          type: string
          nullable: true
        responseSchemaName:
          type: string
          nullable: true
        responseSchema:
          type: string
          nullable: true
        path:
          type: string
          nullable: true
        httpVerb:
          type: string
          nullable: true
        apiEndpointInputAttributes:
          type: array
          items:
            $ref: '#/components/schemas/ApiEndpointAttribute'
          nullable: true
      additionalProperties: false
    ApiEndpointAttribute:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        metaLight:
          $ref: '#/components/schemas/MetaLight'
        status:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
      additionalProperties: false
    Assignment:
      type: object
      properties:
        userUID:
          type: string
          nullable: true
        timeStamp:
          type: string
          format: date-time
      additionalProperties: false
    Attribute:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        metaLight:
          $ref: '#/components/schemas/MetaLight'
        status:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        boType:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
        dataTypeBianId:
          type: string
          nullable: true
        dataFormat:
          type: string
          nullable: true
        direction:
          type: string
          nullable: true
        parentObjectName:
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
          nullable: true
      additionalProperties: false
    AuthenticateRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      additionalProperties: false
    BehaviourQualifier:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        metaLight:
          $ref: '#/components/schemas/MetaLight'
        status:
          type: string
          nullable: true
        serviceDomianID:
          type: integer
          format: int32
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
          nullable: true
        behaviourQualifiers:
          type: array
          items:
            $ref: '#/components/schemas/BehaviourQualifier'
          nullable: true
      additionalProperties: false
    BOAttribute:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        boid:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        featureUID:
          type: string
          nullable: true
        featureName:
          type: string
          nullable: true
        uidDataType:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
        ownerUID:
          type: string
          nullable: true
        ownerName:
          type: string
          nullable: true
        visibility:
          type: string
          nullable: true
        isSpecification:
          type: boolean
        defaultValue:
          type: string
          nullable: true
        isRoot:
          type: boolean
        isMandatory:
          type: boolean
        isLeaf:
          type: boolean
        isAbstract:
          type: boolean
        isActive:
          type: boolean
        isDerived:
          type: boolean
        isReadOnly:
          type: boolean
        isMultiValued:
          type: boolean
        multiplicityElementIsOrdered:
          type: boolean
        multiplicityElementIsUnique:
          type: boolean
        multiplicityElementLower:
          type: string
          nullable: true
        multiplicityElementUpper:
          type: string
          nullable: true
        boEnumeration:
          $ref: '#/components/schemas/BOEnumeration'
        boDataType:
          $ref: '#/components/schemas/BODataType'
        boPrimitiveType:
          $ref: '#/components/schemas/BOPrimitiveType'
      additionalProperties: false
    BOClass:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        boid:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        featureUID:
          type: string
          nullable: true
        featureName:
          type: string
          nullable: true
        uidDataType:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
        ownerUID:
          type: string
          nullable: true
        ownerName:
          type: string
          nullable: true
        visibility:
          type: string
          nullable: true
        isSpecification:
          type: boolean
        defaultValue:
          type: string
          nullable: true
        isRoot:
          type: boolean
        isMandatory:
          type: boolean
        isLeaf:
          type: boolean
        isAbstract:
          type: boolean
        isActive:
          type: boolean
        isDerived:
          type: boolean
        isReadOnly:
          type: boolean
        isMultiValued:
          type: boolean
        multiplicityElementIsOrdered:
          type: boolean
        multiplicityElementIsUnique:
          type: boolean
        multiplicityElementLower:
          type: string
          nullable: true
        multiplicityElementUpper:
          type: string
          nullable: true
        attributeList:
          type: array
          items:
            $ref: '#/components/schemas/BOAttribute'
          nullable: true
      additionalProperties: false
    BOClassBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
      additionalProperties: false
    BODataType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        boid:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        featureUID:
          type: string
          nullable: true
        featureName:
          type: string
          nullable: true
        uidDataType:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
        ownerUID:
          type: string
          nullable: true
        ownerName:
          type: string
          nullable: true
        visibility:
          type: string
          nullable: true
        isSpecification:
          type: boolean
        defaultValue:
          type: string
          nullable: true
        isRoot:
          type: boolean
        isMandatory:
          type: boolean
        isLeaf:
          type: boolean
        isAbstract:
          type: boolean
        isActive:
          type: boolean
        isDerived:
          type: boolean
        isReadOnly:
          type: boolean
        isMultiValued:
          type: boolean
        multiplicityElementIsOrdered:
          type: boolean
        multiplicityElementIsUnique:
          type: boolean
        multiplicityElementLower:
          type: string
          nullable: true
        multiplicityElementUpper:
          type: string
          nullable: true
        attributeList:
          type: array
          items:
            $ref: '#/components/schemas/BOAttribute'
          nullable: true
      additionalProperties: false
    BODataTypeBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
      additionalProperties: false
    BOEnumeration:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        boid:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        featureUID:
          type: string
          nullable: true
        featureName:
          type: string
          nullable: true
        uidDataType:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
        ownerUID:
          type: string
          nullable: true
        ownerName:
          type: string
          nullable: true
        visibility:
          type: string
          nullable: true
        isSpecification:
          type: boolean
        defaultValue:
          type: string
          nullable: true
        isRoot:
          type: boolean
        isMandatory:
          type: boolean
        isLeaf:
          type: boolean
        isAbstract:
          type: boolean
        isActive:
          type: boolean
        isDerived:
          type: boolean
        isReadOnly:
          type: boolean
        isMultiValued:
          type: boolean
        multiplicityElementIsOrdered:
          type: boolean
        multiplicityElementIsUnique:
          type: boolean
        multiplicityElementLower:
          type: string
          nullable: true
        multiplicityElementUpper:
          type: string
          nullable: true
        enumerationLiterals:
          type: array
          items:
            $ref: '#/components/schemas/BOEnumerationLiteral'
          nullable: true
      additionalProperties: false
    BOEnumerationBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
      additionalProperties: false
    BOEnumerationLiteral:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        boid:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        featureUID:
          type: string
          nullable: true
        featureName:
          type: string
          nullable: true
        uidDataType:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
        ownerUID:
          type: string
          nullable: true
        ownerName:
          type: string
          nullable: true
        visibility:
          type: string
          nullable: true
        isSpecification:
          type: boolean
        defaultValue:
          type: string
          nullable: true
        isRoot:
          type: boolean
        isMandatory:
          type: boolean
        isLeaf:
          type: boolean
        isAbstract:
          type: boolean
        isActive:
          type: boolean
        isDerived:
          type: boolean
        isReadOnly:
          type: boolean
        isMultiValued:
          type: boolean
        multiplicityElementIsOrdered:
          type: boolean
        multiplicityElementIsUnique:
          type: boolean
        multiplicityElementLower:
          type: string
          nullable: true
        multiplicityElementUpper:
          type: string
          nullable: true
        enumerationLiteralList:
          type: array
          items:
            $ref: '#/components/schemas/BOEnumerationLiteral'
          nullable: true
      additionalProperties: false
    BOPrimitiveType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        boid:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        featureUID:
          type: string
          nullable: true
        featureName:
          type: string
          nullable: true
        uidDataType:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
        ownerUID:
          type: string
          nullable: true
        ownerName:
          type: string
          nullable: true
        visibility:
          type: string
          nullable: true
        isSpecification:
          type: boolean
        defaultValue:
          type: string
          nullable: true
        isRoot:
          type: boolean
        isMandatory:
          type: boolean
        isLeaf:
          type: boolean
        isAbstract:
          type: boolean
        isActive:
          type: boolean
        isDerived:
          type: boolean
        isReadOnly:
          type: boolean
        isMultiValued:
          type: boolean
        multiplicityElementIsOrdered:
          type: boolean
        multiplicityElementIsUnique:
          type: boolean
        multiplicityElementLower:
          type: string
          nullable: true
        multiplicityElementUpper:
          type: string
          nullable: true
      additionalProperties: false
    BOPrimitiveTypeBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
      additionalProperties: false
    BusinessArea:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
      additionalProperties: false
    BusinessCapability:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        level:
          type: string
          nullable: true
        businessCapabilities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/BusinessCapability'
          nullable: true
        serviceDomainBasics:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceDomainBasic'
          nullable: true
      additionalProperties: false
    BusinessCapabilityBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        level:
          type: string
          nullable: true
        businessCapabilitiyBasics:
          type: array
          items:
            $ref: '#/components/schemas/BusinessCapabilityBasic'
          nullable: true
      additionalProperties: false
    BusinessDomain:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        businessArea:
          $ref: '#/components/schemas/BusinessArea'
      additionalProperties: false
    BusinessDomainBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
      additionalProperties: false
    BusinessObject:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        boid:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        featureUID:
          type: string
          nullable: true
        featureName:
          type: string
          nullable: true
        uidDataType:
          type: string
          nullable: true
        dataType:
          type: string
          nullable: true
        ownerUID:
          type: string
          nullable: true
        ownerName:
          type: string
          nullable: true
        visibility:
          type: string
          nullable: true
        isSpecification:
          type: boolean
        defaultValue:
          type: string
          nullable: true
        isRoot:
          type: boolean
        isMandatory:
          type: boolean
        isLeaf:
          type: boolean
        isAbstract:
          type: boolean
        isActive:
          type: boolean
        isDerived:
          type: boolean
        isReadOnly:
          type: boolean
        isMultiValued:
          type: boolean
        multiplicityElementIsOrdered:
          type: boolean
        multiplicityElementIsUnique:
          type: boolean
        multiplicityElementLower:
          type: string
          nullable: true
        multiplicityElementUpper:
          type: string
          nullable: true
      additionalProperties: false
    BusinessObjectBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
      additionalProperties: false
    BusinessScenario:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        serviceConnections:
          type: array
          items:
            $ref: '#/components/schemas/ServiceConnection'
          nullable: true
        diagramUrl:
          type: string
          nullable: true
        scenarioGroup:
          $ref: '#/components/schemas/ScenarioGroup'
        type:
          type: string
          nullable: true
      additionalProperties: false
    BusinessScenarioBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        type:
          type: string
          nullable: true
      additionalProperties: false
    BusinessScenarioRecordsPerPage:
      enum:
        - 10
        - 20
        - 30
      type: integer
      format: int32
    CapabilitiesServed:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        level0:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          nullable: true
        level1:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          nullable: true
        level2:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          nullable: true
        level3:
          type: array
          items:
            $ref: '#/components/schemas/Entity'
          nullable: true
      additionalProperties: false
    Comment:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        content:
          type: string
          nullable: true
        user:
          type: string
          nullable: true
        userId:
          type: string
          nullable: true
        date:
          type: string
          format: date-time
      additionalProperties: false
    ControlRecord:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        metaLight:
          $ref: '#/components/schemas/MetaLight'
        status:
          type: string
          nullable: true
        serviceDomianID:
          type: integer
          format: int32
        serviceDomianName:
          type: string
          nullable: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
          nullable: true
      additionalProperties: false
    Difference:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        fieldName:
          type: string
          nullable: true
        thisValue:
          type: string
          nullable: true
        thisVersion:
          type: string
          nullable: true
        thisOrganisation:
          type: string
          nullable: true
        comparedValue:
          type: string
          nullable: true
        comparedVersion:
          type: string
          nullable: true
        comparedOrganisation:
          type: string
          nullable: true
        change:
          type: string
          nullable: true
      additionalProperties: false
    DifferenceLight:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        thisValue:
          type: string
          nullable: true
        comparedValue:
          type: string
          nullable: true
        change:
          type: string
          nullable: true
      additionalProperties: false
    Entity:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
      additionalProperties: false
    Feedback:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        assignments:
          type: array
          items:
            $ref: '#/components/schemas/Assignment'
          nullable: true
        type:
          type: string
          nullable: true
      additionalProperties: false
    HtmlPage:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        wpPageID:
          type: string
          nullable: true
        htmlContent:
          type: string
          nullable: true
        wpPageURL:
          type: string
          nullable: true
        serviceDomianID:
          type: integer
          format: int32
        serviceDomainName:
          type: string
          nullable: true
      additionalProperties: false
    HtmlPageBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
      additionalProperties: false
    Meta:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        organisation:
          type: string
          nullable: true
        organisationVersion:
          type: string
          nullable: true
        organisationInstance:
          type: string
          nullable: true
        version:
          type: string
          nullable: true
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          nullable: true
        differences:
          type: array
          items:
            $ref: '#/components/schemas/Difference'
          nullable: true
        feedback:
          $ref: '#/components/schemas/Feedback'
      additionalProperties: false
    MetaLight:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
          nullable: true
        differenceLights:
          type: array
          items:
            $ref: '#/components/schemas/DifferenceLight'
          nullable: true
      additionalProperties: false
    RecordsPerPage:
      enum:
        - 10
        - 100
        - 300
      type: integer
      format: int32
    RevokeTokenRequest:
      type: object
      properties:
        token:
          type: string
          nullable: true
      additionalProperties: false
    ScenarioGroup:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        businessScenarios:
          type: array
          items:
            $ref: '#/components/schemas/BusinessScenario'
          nullable: true
      additionalProperties: false
    ScenarioGroupBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
      additionalProperties: false
    SearchResult:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        metaLight:
          $ref: '#/components/schemas/MetaLight'
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        artefactType:
          type: string
          nullable: true
      additionalProperties: false
    ServiceConnection:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        metaLight:
          $ref: '#/components/schemas/MetaLight'
        status:
          type: string
          nullable: true
        fromServiceConnectionPart:
          $ref: '#/components/schemas/ServiceConnectionPart'
        toServiceConnectionPart:
          $ref: '#/components/schemas/ServiceConnectionPart'
      additionalProperties: false
    ServiceConnectionPart:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        metaLight:
          $ref: '#/components/schemas/MetaLight'
        status:
          type: string
          nullable: true
        serviceDomainName:
          type: string
          nullable: true
        serviceDomainBianId:
          type: string
          nullable: true
        serviceDomainUID:
          type: string
          nullable: true
        serviceOperationName:
          type: string
          nullable: true
        serviceOperationBianId:
          type: string
          nullable: true
        serviceOperationUID:
          type: string
          nullable: true
        serviceOperationDescription:
          type: string
          nullable: true
        serviceOperationActionTerm:
          type: string
          nullable: true
        serviceOperationBaseCRBQ:
          type: string
          nullable: true
        serviceOperationBaseCRBQType:
          type: string
          nullable: true
        x:
          type: integer
          format: int32
        y:
          type: integer
          format: int32
        apiEndPointLink:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
      additionalProperties: false
    ServiceDomain:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        serviceDomainID:
          type: integer
          format: int32
        characteristics:
          $ref: '#/components/schemas/ServiceDomainCharacteristics'
        extendedDefinition:
          type: boolean
        businessArea:
          $ref: '#/components/schemas/BusinessArea'
        businessDomain:
          $ref: '#/components/schemas/BusinessDomain'
        controlRecord:
          $ref: '#/components/schemas/ControlRecord'
        behaviourQualifiers:
          type: array
          items:
            $ref: '#/components/schemas/BehaviourQualifier'
          nullable: true
        serviceOperations:
          type: array
          items:
            $ref: '#/components/schemas/ServiceOperation'
          nullable: true
        executiveSummary:
          type: string
          nullable: true
        examplesOfUse:
          type: string
          nullable: true
        roleDefinition:
          type: string
          nullable: true
        businessScenarios:
          type: array
          items:
            $ref: '#/components/schemas/BusinessScenario'
          nullable: true
        coreBusinessObject:
          type: string
          nullable: true
        keyFeatures:
          type: string
          nullable: true
        fromServiceConnectionParts:
          type: array
          items:
            $ref: '#/components/schemas/ServiceConnectionPart'
          nullable: true
        toServiceConnectionParts:
          type: array
          items:
            $ref: '#/components/schemas/ServiceConnectionPart'
          nullable: true
        apiConsole:
          type: string
          nullable: true
        htmlPage:
          $ref: '#/components/schemas/HtmlPage'
        api:
          $ref: '#/components/schemas/Api'
        apiStatus:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        serves:
          $ref: '#/components/schemas/CapabilitiesServed'
      additionalProperties: false
    ServiceDomainBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        businessArea:
          type: string
          nullable: true
        businessDomain:
          type: string
          nullable: true
        extendedDefinition:
          type: boolean
        executiveSummary:
          type: string
          nullable: true
        examplesOfUse:
          type: string
          nullable: true
        roleDefinition:
          type: string
          nullable: true
        keyFeatures:
          type: string
          nullable: true
        businessCapabilityBasics:
          type: array
          items:
            $ref: '#/components/schemas/BusinessCapabilityBasic'
          nullable: true
      additionalProperties: false
    ServiceDomainCharacteristics:
      type: object
      properties:
        uid:
          type: string
          nullable: true
        lastModified:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        id:
          type: integer
          format: int32
        metaLight:
          $ref: '#/components/schemas/MetaLight'
        status:
          type: string
          nullable: true
        functionalPattern:
          type: string
          nullable: true
        assetType:
          type: string
          nullable: true
        genericArtefactType:
          type: string
          nullable: true
      additionalProperties: false
    ServiceDomainRecordsPerPage:
      enum:
        - 10
        - 20
        - 30
      type: integer
      format: int32
    ServiceOperation:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
        serviceDomianBIANID:
          type: string
          nullable: true
        serviceDomainName:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        baseCRBQName:
          type: string
          nullable: true
        actionTerm:
          type: string
          nullable: true
        httpVerb:
          type: string
          nullable: true
        inputAttributes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
          nullable: true
        outputAttributes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Attribute'
          nullable: true
        inputBQs:
          type: array
          items:
            $ref: '#/components/schemas/BehaviourQualifier'
          nullable: true
        outputBQs:
          type: array
          items:
            $ref: '#/components/schemas/BehaviourQualifier'
          nullable: true
        apiEndpoint:
          $ref: '#/components/schemas/ApiEndpoint'
      additionalProperties: false
    ServiceOperationBasic:
      type: object
      properties:
        id:
          type: integer
          format: int32
        uid:
          type: string
          nullable: true
        bianId:
          type: string
          nullable: true
        meta:
          $ref: '#/components/schemas/Meta'
        name:
          type: string
          nullable: true
        displayName:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        status:
          type: string
          nullable: true
        textScore:
          type: number
          format: double
      additionalProperties: false
  securitySchemes:
    Bearer:
      type: apiKey
      description: 'JWT Authorization header using the Bearer scheme (Example: ''Bearer 12345abcdef'')'
      name: Authorization
      in: header
security:
  - Bearer: [ ]